name: QA - Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run lint checks
        run: ./gradlew lint

      - name: Run detekt static analysis
        run: ./gradlew detekt

      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: |
            app/build/reports/lint-results-*.html
            app/build/reports/lint-results-*.xml

      - name: Upload detekt reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports
          path: |
            app/build/reports/detekt/
            standalone/build/reports/detekt/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run performance tests
        run: ./gradlew :standalone:test --tests "*Performance*"

      - name: Build size analysis
        run: |
          ./gradlew assembleDevDebug
          ls -la app/build/outputs/apk/dev/debug/
          du -h app/build/outputs/apk/dev/debug/*.apk

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Cache OWASP NVD data
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/dependency-check-data
          key: ${{ runner.os }}-owasp-nvd-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-owasp-nvd-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run OWASP dependency check
        run: ./gradlew dependencyCheckAnalyze
        continue-on-error: true
        timeout-minutes: 25

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            app/build/reports/dependency-check/
            standalone/build/reports/dependency-check/

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate documentation
        run: ./gradlew dokkaHtml

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: |
            app/build/dokka/
            standalone/build/dokka/

  compatibility-check:
    name: Android Compatibility
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        api-level: [24, 29, 34, 35]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build for API level ${{ matrix.api-level }}
        run: |
          ./gradlew assembleDevDebug -PminSdkVersion=${{ matrix.api-level }}

      - name: Check APK compatibility
        run: |
          echo "Checking APK for API level ${{ matrix.api-level }}"
          if [ -f app/build/outputs/apk/dev/debug/*.apk ]; then
            echo "✅ APK built successfully for API ${{ matrix.api-level }}"
          else
            echo "❌ APK build failed for API ${{ matrix.api-level }}"
            exit 1
          fi